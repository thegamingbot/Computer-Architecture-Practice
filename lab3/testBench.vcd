$date
	Mon Jan 25 15:22:22 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 32 ! W [31:0] $end
$var wire 32 " B [31:0] $end
$var wire 32 # A [31:0] $end
$var reg 5 $ RA [4:0] $end
$var reg 5 % RB [4:0] $end
$var reg 5 & RW [4:0] $end
$var reg 1 ' clk $end
$var reg 3 ( s [2:0] $end
$scope module m_01 $end
$var wire 5 ) RA [4:0] $end
$var wire 5 * RB [4:0] $end
$var wire 5 + RW [4:0] $end
$var wire 1 ' clk $end
$var wire 3 , s [2:0] $end
$var wire 32 - w2 [31:0] $end
$var wire 32 . w1 [31:0] $end
$var wire 32 / W [31:0] $end
$var wire 32 0 B [31:0] $end
$var wire 32 1 A [31:0] $end
$scope module alu_01 $end
$var wire 3 2 s [2:0] $end
$var wire 32 3 B [31:0] $end
$var wire 32 4 A [31:0] $end
$var reg 32 5 C [31:0] $end
$upscope $end
$scope module rf_01 $end
$var wire 32 6 A [31:0] $end
$var wire 32 7 B [31:0] $end
$var wire 5 8 RA [4:0] $end
$var wire 5 9 RB [4:0] $end
$var wire 5 : RW [4:0] $end
$var wire 1 ; ReadWrite $end
$var wire 32 < W [31:0] $end
$var wire 1 ' clk $end
$var integer 32 = i [31:0] $end
$scope begin registerFileInit $end
$upscope $end
$upscope $end
$scope module rf_02 $end
$var wire 32 > A [31:0] $end
$var wire 32 ? B [31:0] $end
$var wire 5 @ RA [4:0] $end
$var wire 5 A RB [4:0] $end
$var wire 5 B RW [4:0] $end
$var wire 1 C ReadWrite $end
$var wire 32 D W [31:0] $end
$var wire 1 ' clk $end
$var integer 32 E i [31:0] $end
$scope begin registerFileInit $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 E
b1111000001000110111111011101111 D
1C
b0 B
b11111 A
b10010 @
b10111000100101111011111001110001 ?
b1111001011010001011110111110010 >
b100000 =
bx <
0;
b0 :
b11111 9
b10010 8
b101011100111000011100001010 7
b1110010101011111111011111100101 6
b1111000001000110111111011101111 5
b1110010101011111111011111100101 4
b101011100111000011100001010 3
b0 2
b1110010101011111111011111100101 1
b101011100111000011100001010 0
b1111000001000110111111011101111 /
b1111001011010001011110111110010 .
b10111000100101111011111001110001 -
b0 ,
b0 +
b11111 *
b10010 )
b0 (
1'
b0 &
b11111 %
b10010 $
b1110010101011111111011111100101 #
b101011100111000011100001010 "
b1111000001000110111111011101111 !
$end
#5
b1000011000001001101111010000110 !
b1000011000001001101111010000110 /
b1000011000001001101111010000110 5
b1000011000001001101111010000110 D
b1 (
b1 ,
b1 2
b10010 &
b10010 +
b10010 :
b10010 B
b1000110001011011111011110001100 "
b1000110001011011111011110001100 0
b1000110001011011111011110001100 3
b1000110001011011111011110001100 7
b11100111110001010111001011001111 -
b11100111110001010111001011001111 ?
b1101 %
b1101 *
b1101 9
b1101 A
b10001001001100101101011000010010 #
b10001001001100101101011000010010 1
b10001001001100101101011000010010 4
b10001001001100101101011000010010 6
b100000110001001011001101000001 .
b100000110001001011001101000001 >
b10100 $
b10100 )
b10100 8
b10100 @
0'
#10
b10110000000010110111011111000001 !
b10110000000010110111011111000001 /
b10110000000010110111011111000001 5
b10110000000010110111011111000001 D
b10 (
b10 ,
b10 2
b11010 &
b11010 +
b11010 :
b11010 B
b10110010101001110010011001100101 "
b10110010101001110010011001100101 0
b10110010101001110010011001100101 3
b10110010101001110010011001100101 7
b10101000011111101110100101010 -
b10101000011111101110100101010 ?
b11101 %
b11101 *
b11101 9
b11101 A
b10010110101010110101100000101101 #
b10010110101010110101100000101101 1
b10010110101010110101100000101101 4
b10010110101010110101100000101101 6
b11011110011101010000001010111100 .
b11011110011101010000001010111100 >
b11100 $
b11100 )
b11100 8
b11100 @
1'
#15
b11010 !
b11010 /
b11010 5
b11010 D
b11 (
b11 ,
b11 2
b1010 &
b1010 +
b1010 :
b1010 B
b110110101111100110100001101 "
b110110101111100110100001101 0
b110110101111100110100001101 3
b110110101111100110100001101 7
b11101010101001100010101011010101 -
b11101010101001100010101011010101 ?
b1001 %
b1001 *
b1001 9
b1001 A
b10110010101001110010011001100101 #
b10110010101001110010011001100101 1
b10110010101001110010011001100101 4
b10110010101001110010011001100101 6
b10101000011111101110100101010 .
b10101000011111101110100101010 >
b11101 $
b11101 )
b11101 8
b11101 @
0'
#20
b1001011100001100001000 !
b1001011100001100001000 /
b1001011100001100001000 5
b1001011100001100001000 D
b100 (
b100 ,
b100 2
b11011 &
b11011 +
b11011 :
b11011 B
b110101110010111101100001101 "
b110101110010111101100001101 0
b110101110010111101100001101 3
b110101110010111101100001101 7
b11001011001000000011111010010110 -
b11001011001000000011111010010110 ?
b100 %
b100 *
b100 9
b100 A
b1111001001100000110100111110010 #
b1111001001100000110100111110010 1
b1111001001100000110100111110010 4
b1111001001100000110100111110010 6
b111100001000001111001101111000 .
b111100001000001111001101111000 >
b10110 $
b10110 )
b10110 8
b10110 @
1'
#25
b10010100000000000101100000101000 !
b10010100000000000101100000101000 /
b10010100000000000101100000101000 5
b10010100000000000101100000101000 D
b101 (
b101 ,
b101 2
b111 &
b111 +
b111 :
b111 B
b10010110101010110101100000101101 "
b10010110101010110101100000101101 0
b10010110101010110101100000101101 3
b10010110101010110101100000101101 7
b11011110011101010000001010111100 -
b11011110011101010000001010111100 ?
b11100 %
b11100 *
b11100 9
b11100 A
b11110100000000000111101011101000 #
b11110100000000000111101011101000 1
b11110100000000000111101011101000 4
b11110100000000000111101011101000 6
b1110101110001010000110111101011 .
b1110101110001010000110111101011 >
b11000 $
b11000 )
b11000 8
b11000 @
0'
#30
b1111111111111111111100111111111 !
b1111111111111111111100111111111 /
b1111111111111111111100111111111 5
b1111111111111111111100111111111 D
b110 (
b110 ,
b110 2
b11110 &
b11110 +
b11110 :
b11110 B
b1000110110111111001100110001101 "
b1000110110111111001100110001101 0
b1000110110111111001100110001101 3
b1000110110111111001100110001101 7
b10001001100000111011100000010011 -
b10001001100000111011100000010011 ?
b101 %
b101 *
b101 9
b101 A
b1111001001100000110100111110010 #
b1111001001100000110100111110010 1
b1111001001100000110100111110010 4
b1111001001100000110100111110010 6
b111100001000001111001101111000 .
b111100001000001111001101111000 >
b10110 $
b10110 )
b10110 8
b10110 @
1'
#35
b111111111011111111000001111111 !
b111111111011111111000001111111 /
b111111111011111111000001111111 5
b111111111011111111000001111111 D
b111 (
b111 ,
b111 2
0'
